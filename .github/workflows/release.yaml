name: Release

on:
  push:
    tags:
      - "v-release*.*" # Adjust the tag pattern as needed

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm clean-install

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Create and switch to release branch
        run: |
          git fetch origin
          if git rev-parse --verify origin/release-branch; then
            git checkout release-branch
            git pull origin release-branch
          else
            git checkout -b release-branch
            git push --set-upstream origin release-branch
          fi

      - name: Configure Git to handle divergent branches
        run: |
          git config pull.rebase false  # Using merge strategy, you can change to true for rebase or 'ff only' for fast-forward only

      - name: Pull latest changes from master and merge
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin master --allow-unrelated-histories --strategy-option theirs  # or use --strategy-option ours
      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
          npx semantic-release --branches $TAG_NAME

      - name: Add and commit changes
        run: |
          git add .
          git commit -m "chore(release): update release notes [skip ci]"

      - name: Push changes to release branch
        run: |
          git push origin release-branch

      - name: Create Pull Request for Release
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(release): ${nextRelease.version} [skip ci]"
          branch: release-branch
          title: "Release ${nextRelease.version}"
          body: "This pull request includes the release of version ${nextRelease.version}."
          base: master
